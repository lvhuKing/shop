<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>shopping</artifactId>
        <groupId>com.ccl</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>com.ccl</groupId>
    <artifactId>gateway-service</artifactId>
    <version>1.0-SNAPSHOT</version>
    
    <dependencies>
        <!--
        shopping-common中，工具类获取请求IP,依赖spring-boot-starter-web，与spring-cloud-starter-gateway冲突：
        spring-cloud-starter-gateway基于WebFlux实现，与SpringMVC是两个体系，因此会产生依赖冲突。
        因此，需要单独在gateway-service中重复写HttpUtil和JwtUtil，获取请求IP以及实现授权验证。
            报错信息：No qualifying bean of type 'org.springframework.http.codec.ServerCodecConfigurer' available:
        expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}-->
        <!--shopping-common-->
        <!--<dependency>
            <groupId>com.ccl</groupId>
            <artifactId>shopping-common</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>-->
        <dependency>
            <groupId>com.ccl</groupId>
            <artifactId>basic-entity</artifactId>
            <version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-web</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- nacos -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        <!-- nacos-config -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <!-- 
            注意：spring-cloud-starter-gateway与spring-boot-starter-web不能同时存在，否则项目无法启动
                 所以JWT不能使用shopping-common中的工具包，需单独配置
         -->
        <!-- spring-cloud-starter-gateway -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>
        </dependency>
        <!-- slf4j-api -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <!-- slf4j-simple -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>
        <!-- spring-boot-starter-data-redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <!-- avax.servlet-api: 获取http相关类 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <!-- jjwt -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
        </dependency>
        <!-- java-jwt -->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
        </dependency>
        <!-- redis: springboot中的redis依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <!-- redis: lettuce pool 缓存连接池 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>